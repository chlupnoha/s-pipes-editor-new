@prefix : <http://onto.fel.cvut.cz/ontologies/s-pipes/hello-world-example-0.1/> .
@prefix doc: <http://onto.fel.cvut.cz/ontologies/documentation/> .
@prefix kbss-module: <http://onto.fel.cvut.cz/ontologies/lib/module/> .
@prefix km-sesame: <http://onto.fel.cvut.cz/ontologies/lib/module/sesame/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix ex: <http://example.com/ns#> .


#<http://ontologies.org/importing>
#  a owl:Ontology ;
#  owl:imports <http://ontologies.org/imported> .
#
#<http://imported.ttl>
#  a owl:Ontology ;
#  owl:imports <http://imported.ttl> .

:bind-firstname
  rdf:type sml:BindWithConstant ;
  sm:next :construct-greeding ;
  sm:outputVariable "personName" ;
  sml:value [
      sp:varName "firstName"^^xsd:string ;
    ] ;
  rdfs:label "Bind person name" ;
.

:construct-greeding
  rdf:type sml:ApplyConstruct ;
  sm:next :express-greeding_Return ;
  sml:constructQuery [
      rdf:type sp:Construct ;
      sp:text """PREFIX : <http://vfn.cz/ontologies/s-pipes/hello-world-example-0.1/>
CONSTRUCT {
    ?person :is-greeted-by-message ?greetingMessage .
}
WHERE {
    BIND(concat(str(:), ?personName) as ?person)
    BIND(concat("Hello ", ?personName, ".") as ?greetingMessage)
}"""^^xsd:string ;
    ] ;
  sml:replace "true"^^xsd:boolean ;
  rdfs:label "Construct greeting"^^xsd:string ;
.

:express-greeding_Return
  rdf:type sml:ReturnRDF ;
  sml:serialization sml:JSONLD ;
  rdfs:label "Return greeding statement" ;
.

:execute-greeding
  rdf:type sm:Function ;
  sm:returnModule :express-greeding_Return ;
  rdfs:subClassOf sm:Functions ;
.


ex:File
  a rdfs:Class, sh:NodeShape .

ex:Alice
  a ex:Person ;
  rdfs:label "Return greeding statement" .

#RULES FOR NAMING COULD BE ANOTHER NODES