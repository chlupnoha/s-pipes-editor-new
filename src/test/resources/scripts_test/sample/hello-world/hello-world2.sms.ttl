# baseURI: http://onto.fel.cvut.cz/ontologies/s-pipes/hello-world-example-0.1
# imports: http://onto.fel.cvut.cz/ontologies/s-pipes-lib

@prefix : <http://onto.fel.cvut.cz/ontologies/s-pipes/hello-world-example-0.2/> .
@prefix doc: <http://onto.fel.cvut.cz/ontologies/documentation/> .
@prefix kbss-module: <http://onto.fel.cvut.cz/ontologies/lib/module/> .
@prefix km-sesame: <http://onto.fel.cvut.cz/ontologies/lib/module/sesame/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sm: <http://topbraid.org/sparqlmotion#> .
@prefix sml: <http://topbraid.org/sparqlmotionlib#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://onto.fel.cvut.cz/ontologies/s-pipes/hello-world-example-0.2>
  a owl:Ontology ;
  owl:imports <http://onto.fel.cvut.cz/ontologies/s-pipes-lib> ;
.
:bind-person-name
  a sml:BindWithConstant ;
  sm:next :bind-person-id ;
  sm:outputVariable "personName" ;
  sml:value [
      a sp:concat ;
      sp:arg1 [
          sp:varName "firstName" ;
        ] ;
      sp:arg2 " " ;
      sp:arg3 [
          sp:varName "lastName" ;
        ] ;
    ] ;
  rdfs:label "Bind person name" ;
.
:bind-person-id
  a sml:BindWithConstant ;
  sm:next :construct-greeding ;
  sm:outputVariable "personId" ;
  sml:value [
      a sp:replace ;
      sp:arg1 [
          a sp:lcase ;
          sp:arg1 [
              sp:varName "personName" ;
            ] ;
        ] ;
      sp:arg2 " " ;
      sp:arg3 "-" ;
    ] ;
  rdfs:label "Bind person id" ;
.
:construct-greeding
  a sml:ApplyConstruct ;
  sm:next :express-greeding_Return ;
  sml:constructQuery [
      a sp:Construct ;
      sp:text """
PREFIX : <http://vfn.cz/ontologies/s-pipes/hello-world-example-0.2/>
CONSTRUCT {
    ?person :is-greeted-by-message ?greetingMessage .
} WHERE {
    BIND(iri(concat(str(:), ?personId)) as ?person)
    BIND(concat("Hello ", ?personName, ".") as ?greetingMessage)
}
""" ;
    ] ;
  sml:replace true ;
  rdfs:label "Construct greeting" ;
.
:execute-greeding
  a sm:Function ;
  sm:returnModule :express-greeding_Return ;
  rdfs:subClassOf sm:Functions ;
.
:express-greeding_Return
  a sml:ReturnRDF ;
  sml:serialization sml:JSONLD ;
  rdfs:label "Return greeding statement" ;
.
